= content_for :menu do
  -if @border_closed
    = icon_to 'nouveau.png',
      new_bank_account_bank_extract_path(@bank_account),
      title: 'Création d\'un nouvel extrait de compte'
  - if @imported_bels.empty?
    = icon_to 'restauration.png',
      new_importer_bank_account_bels_importer_path(@bank_account),
      title: 'Importation d\'un relevé bancaire'
  - else
    = icon_to 'supprimer.png', [:destroy_all, @bank_account, :imported_bels],
      method: :delete,
      title: 'Supprime toutes les lignes importées', 
      data:{confirm:'Cette action supprime toutes les lignes importées; mais n\'efface pas les écritures déjà créées à partir de ces lignes'}                    

.champ
  %h3 Banque #{@bank_account.nickname} : Liste des lignes importées

  %table.table.table-striped.table-bordered.table-condensed.dataTable(cellpadding="0" cellspacing="0" border="0")      
    %thead
      %tr
        %th.pc5.date-euro Date
        %th.pc5 Type
        %th.pc5 Réf
        %th.pc30 Libellé
        %th.pc15 Activité
        %th.pc15 Nature
        %th.pc5 Dépenses
        %th.pc5 Recettes
        %th.pc5 Mode Pt
        %th.actions N°/Actions
    %tbody{'data-mindate'=>l(@period.start_date), 'data-maxdate'=>l(@period.close_date)}
      - @imported_bels.each do |ibel|
        - if ibel.importable?(@correct_range_date)
          =render(partial:'importable', object: ibel)
        - elsif ibel.imported?
          =render(partial:'imported', object: ibel)
        -else
          =render(partial:'notimportable', object: ibel)
.attributes#transfer{'data-collection'=> transfer_counterpart}
.attributes#depenses{'data-collection'=> coll_payment_mode}

  