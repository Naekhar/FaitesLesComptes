=  content_for :menu do
  = icon_to  'nouveau.png', new_admin_room_path if current_user.allowed_to_create_room?
  -if abc[:adapter]=='sqlite3'
    = icon_to 'restauration.png', new_admin_restore_path ,                                                   |
           :confirm=>"Restaurer un organisme ou en créer un nouveau à partir d'un fichier de sauvegarde ?",  |
                  :title=>"Permet de créer un organisme à partir d'un fichier de sauvegarde"                 |

.champ
  %h3 Liste des organismes
 

%table(cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered table-condensed" id="admin_organism_table")
  %thead
    %tr
      %th.pc15 Titre
      %th.pc35 Commentaire
      %th.pc10 Statut
      %th.pc10 Base de données
      %th.pc5 Etat
      
      %th.pc10 Actions


  %tbody
    - @rooms.each do |ro|
      - organ = ro.organism
      %tr
        %td= organ.title rescue 'non renseigné' # pour gérér les cas où la base de données n est pas à jour et où le champ est manquant
        %td= organ.comment rescue 'non renseigné'
        %td= organ.status rescue 'non renseigné'
        %td= ro.db_filename
        %td 
          
          = icon_to('migrer.png', migrate_admin_room_path(ro), :method=>:post, title:'migrer la base') if ro.late?
          = icon_to('supprimer.png', admin_room_path(ro), :method=>:delete) if ro.no_base?
          = image_tag('icones/traffic-light-red.png', title:'Base en avance sur la version du programme; Impossible à utiliser') if ro.advanced?
          = image_tag('icones/traffic-light-green.png', title:'Base OK') if ro.relative_version == :same_migration
        
        %td
          - if ro.up_to_date?
            =# icon_to 'sauvegarde.png', new_admin_clone_path, :title=>"Fait un clone de l'organisme"  if current_user.allowed_to_create_room?
            = icon_to 'afficher.png',ro, title: 'affichage dans la partie saisie'
            = icon_to 'detail.png', [:admin, ro]
          
