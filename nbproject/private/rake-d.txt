about=List versions of all Rails frameworks and the environment
adherent\:install\:migrations=Copy migrations from adherent to application
apartment\:create=Create all tenants
apartment\:migrate=Migrate all tenants
apartment\:migrate\:down=Runs the "down" for a given migration VERSION across all tenants.
apartment\:migrate\:redo=Rolls back the tenant one migration and re migrate up (options: STEP=x, VERSION=x).
apartment\:migrate\:up=Runs the "up" for a given migration VERSION across all tenants.
apartment\:rollback=Rolls the migration back to the previous version (specify steps w/ STEP=n) across all tenants.
apartment\:seed=Seed all tenants
assets\:clean[keep]=Remove old compiled assets
assets\:clobber=Remove compiled assets
assets\:environment=Load asset compile environment
assets\:precompile=Compile all the assets named in config.assets.precompile
autoprefixer\:info=Show selected browsers and prefixed CSS properties and values
cache_digests\:dependencies=Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)
cache_digests\:nested_dependencies=Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)
db\:_dump=
db\:abort_if_pending_migrations=
db\:charset=
db\:collation=
db\:create=Create the database from DATABASE_URL or config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)
db\:create\:all=
db\:drop=Drops the database using DATABASE_URL or the current Rails.env (use db:drop:all to drop all databases)
db\:drop\:all=
db\:fixtures\:identify=
db\:fixtures\:load=Load fixtures into the current environment's database. Load specific fixtures using FIXTURES=x,y. Load from subdirectory in test/fixtures using FIXTURES_DIR=z. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures.
db\:forward=
db\:load_config=
db\:migrate=Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog).
db\:migrate\:down=
db\:migrate\:redo=
db\:migrate\:reset=
db\:migrate\:status=Display status of migrations
db\:migrate\:up=
db\:reset=
db\:rollback=Rolls the schema back to the previous version (specify steps w/ STEP=n).
db\:schema\:cache\:clear=Clear a db/schema_cache.dump file.
db\:schema\:cache\:dump=Create a db/schema_cache.dump file.
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:schema\:load_if_ruby=
db\:seed=Load the seed data from db/seeds.rb
db\:setup=Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)
db\:structure\:dump=Dump the database structure to db/structure.sql. Specify another file with DB_STRUCTURE=db/my_structure.sql
db\:structure\:load=
db\:structure\:load_if_sql=
db\:test\:clone=
db\:test\:clone_schema=
db\:test\:clone_structure=
db\:test\:load=
db\:test\:load_schema=
db\:test\:load_structure=
db\:test\:prepare=
db\:test\:purge=
db\:version=Retrieves the current schema version number
default=
doc=
doc/app=
doc/app/index.html=
doc\:app=Generate docs for the app -- also available doc:rails, doc:guides (options: TEMPLATE=/rdoc-template.rb, TITLE="Custom Title")
doc\:clobber=
doc\:clobber_app=
doc\:clobber_rails=
doc\:guides=
doc\:rails=
doc\:reapp=
doc\:rerails=
environment=
html=
html/index.html=
jobs\:check[max_age]=Exit with error status if any jobs older than max_age seconds haven't been attempted yet.
jobs\:clear=Clear the delayed_job queue.
jobs\:environment_options=
jobs\:work=Start a delayed_job worker.
jobs\:workoff=Start a delayed_job worker and exit when all available jobs are complete.
log\:clear=Truncates all *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)
middleware=Prints out your Rack middleware stack
notes=Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)
notes\:custom=Enumerate a custom annotation, specify with ANNOTATION=CUSTOM
notes\:fixme=
notes\:optimize=
notes\:todo=
ocra\:build_installer=appel principal et construction de l installer avec ocra
ocra\:clean=nettoyage des fichiers tmp et log
ocra\:copy_files=copie des fichiers necessaires
ocra\:ocra=juste la construction du ocra
rails\:template=Applies the template supplied by LOCATION=(/path/to/template) or URL
rails\:templates\:copy=
rails\:update=Update configs and some other initially generated files (or use just update:configs, update:bin, or update:application_controller)
rails\:update\:application_controller=
rails\:update\:bin=
rails\:update\:configs=
railties\:install\:migrations=
routes=Print out all defined routes in match order, with names. Target specific controller with CONTROLLER=x.
secret=Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions).
spec=Run all specs in spec directory (excluding plugin specs)
spec\:config=Run the code examples in spec/config
spec\:controllers=Run the code examples in spec/controllers
spec\:features=Run the code examples in spec/features
spec\:helpers=Run the code examples in spec/helpers
spec\:lib=Run the code examples in spec/lib
spec\:mailers=Run the code examples in spec/mailers
spec\:models=Run the code examples in spec/models
spec\:prepare=
spec\:request=Run the code examples in spec/request
spec\:routing=Run the code examples in spec/routing
spec\:statsetup=
spec\:support=Run the code examples in spec/support
spec\:views=Run the code examples in spec/views
stats=Report code statistics (KLOCs, etc) from the application
test=Runs test:units, test:functionals, test:integration together
test\:all=Run tests quickly by merging all types and not resetting db
test\:all\:db=Run tests quickly, but also reset db
test\:controllers=
test\:deprecated=
test\:functionals=
test\:helpers=
test\:integration=
test\:mailers=
test\:models=
test\:prepare=
test\:recent=Run tests for {:recent=>["test:deprecated", "test:prepare"]}\nDeprecated; Test recent changes
test\:run=
test\:single=
test\:uncommitted=Run tests for {:uncommitted=>["test:deprecated", "test:prepare"]}\nDeprecated; Test changes since last checkin (only Subversion and Git)
test\:units=
time\:zones\:all=Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=
time\:zones\:us=
tmp=
tmp/cache=
tmp/cache/assets=
tmp/cache/assets/development=
tmp/cache/assets/production=
tmp/cache/assets/test=
tmp/pids=
tmp/sessions=
tmp/sockets=
tmp\:cache\:clear=
tmp\:clear=Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)
tmp\:create=Creates tmp directories for sessions, cache, sockets, and pids
tmp\:pids\:clear=
tmp\:sessions\:clear=
tmp\:sockets\:clear=
watchr=Run watchr
